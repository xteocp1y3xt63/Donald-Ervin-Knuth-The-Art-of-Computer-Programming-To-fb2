<?xml version="1.0" encoding="UTF-8"?>
<FictionBook xmlns="http://www.gribuser.ru/xml/fictionbook/2.0" xmlns:l="http://www.w3.org/1999/xlink">
  <description>
    <title-info>
      <author>
        <first-name>Дональд</first-name>
        <middle-name/>
        <last-name>Кнут</last-name>
      </author>
      <book-title>Искусство программирования том 1</book-title>
      <annotation>
        <p>Текст аннотации</p>
      </annotation>
      <lang>rus</lang>
      <src-lang>eng</src-lang>
      <genre>comp_programming</genre>
    </title-info>
    <document-info>
      <program-used>fb2edit 0.0.7</program-used>
      <date value="2015-07-04 19:17:02">04 July 2015</date>
    </document-info>
  </description>
  <body>
    <title>
      <p>Исусство программирования том 1</p>
    </title>
    <section>
      <title>
        <p>От издателей русского перевода</p>
      </title>
      <p>На мировом рынке компьютерной литературы существует множество книг, предназначенных для обучения основным алгоритмам и используемых при программировании. Их довольно много, и они в значительной степени конкурируют между собой.Однако среди них есть особая книга. Это трехтомник &quot;Искусство программирования&quot; Д. Э. Кнута, который стоит вне всякой конкуренции, входит в золотой фонд мировой литературы по информатике и является настольной книгой практически для всех, кто связан с программированием.</p>
      <p>Мы как издатели видим ценность книги в том, что она предназначена не столько для обучения технике программирования, сколько для обучения, если это возможно, &quot;искусству программирования&quot;, предлагает массу рецептов усовершенствования программ и, что самое главное, учит самостоятельно находить эти рецепты.</p>
      <p>Ни для кого не секрет, что наши программисты являются одними из наиболее высококвалифицированных специалистов в мире. Они достойно представляют за рубежом отечественную школу программирования и информатики, которая внесла значительный вклад в формирование фундаментальных основ компьютерных наук. Для сохранения такого уровня и продвижения вперед необходимо своевременное издание на русском языке книг, отражающих основные мировые достижения в этой области. Трехтомник &quot;Искусство программирования&quot; Д. Э. Кнута — одна из таких книг.</p>
      <p>Мы гордимся тем, что библиотеки программистов, преподавателей, студентов, старшеклассников и многих других пополнятся этой классической книгой и что тем самым мы внесем свой вклад в формирование более глубокого понимания основ компьютерных наук. Мы глубоко убеждены, что книга &quot;Искусство программирования&quot; Д. Э. Кнута способна приблизить человека к совершенству. Надеемся, наше издание на русском языке этой замечательной книги еще раз подтвердит, что истинные ценности с годами не устаревают.</p>
      <section>
        <p>— Виктор Штонда, Геннадий Петриковец, Алексей Орлович, издатели</p>
      </section>
    </section>
    <section>
      <title>
        <p>О книге &quot;Искусство программирования&quot;</p>
      </title>
      <p>У каждой книги своя судьба. Одни появляются незаметно и так же незаметно исчезают в потоке времени, покрываясь пылью на полках библиотек. Другие в определенный период пользуются спросом у узкого круга специалистов, пока им на смену не приходят новые справочники. Третьи, поднимаясь над временем, оказывают мощное влияние на технологическое развитие общества. Книг, относящихся к последней категории, не так уж и много. Их выход в свет — всегда праздник. Проходят годы, изменяются технологии, но новые поколения с постоянным интересом перечитывают их страницы. Именно к таким книгам относится предлагаемый читателю многотомный труд известного американского ученого Дональда Эрвина Кнута &quot;Искусство программирования&quot;.</p>
      <p>Прошло почти 30 лет со времени первого издания в 1972 году в США этой книги.Она была переведена на большинство языков мира, в том числе и на русский. К настоящему времени на территории стран СНГ трехтомник Д. Э. Кнута стал библиографической редкостью. В 1998 году в США вышло третье издание &quot;Искусства программирования&quot; В нем сохранена последовательность изложения материала прежних версий, но значительно расширен список ссылок, в который включены свежие и наиболее важные результаты, добавлены новые упражнения и комментарии, устранены неточности. Учитывая популярность во всем мире &quot;Искусства программирования&quot; давно следовало ожидать появления нового переводного издания на русском языке, которое вы и держите в руках.</p>
      <p>В чем же успех &quot;Искусства программирования&quot; Д. Э. Кнута?</p>
      <p>Во-первых, эта книга — великолепное учебное пособие по составлению и анализу компьютерных алгоритмов. Ее разделы могут быть включены во многие университетские курсы по технологиям программирования, теории алгоритмов, дискретной математике. Книгу могут изучать и школьники старших классов, знакомые с основами программирования. В качестве основного языка записи алгоритмов автор выбрал язык машинных команд гипотетического универсального компьютера MIX. Это позволяет строить оптимальные программы с учетом особенностей вычислительных машин. Перенести MIX-программы на реальные ЭВМ или переписать их на языках высокого уровня не составляет особого труда. Логика работы программ почти всегда поясняется простыми блок-схемами.</p>
      <p>Во-вторых, тщательно подобранный материал, вошедший в книгу, включает в себя основные фундаментальные классы алгоритмов, которые в том или ином виде наиболее часто встречаются в практике программирования.</p>
      <p>В-третьих, немаловажным фактором успеха книги Д. Э. Кнута является энциклопедичность изложения. Профессор Кнут отличается уникальной способностью отслеживать проблему от исторических предпосылок ее зарождения до современного состояния. Многочисленные ссылки на работы старых мастеров( вплоть до времен античности), заключенные в современный контекст, создают у читателя особое чувство причастности к историческому развитию научных идей и методов.</p>
      <p>В-четвертых, следует отметить мастерство изложения. Книга рассчитана на широкий круг читателей — от начинающих студентов до программистов-профессионалов. Каждому будет интересно изучать компьютерные алгоритмы на своем уровне. Материал самодостаточен. Для понимания сути методов не требуется знания особых разделов математики или специальных технологий программирования. Прослеживается определенная &quot;музыкальная&quot; композиция сюжетного построения( дома у Д. Э. Кнута есть небольшой орган, на котором он играет).</p>
      <p>Список составляющих успеха &quot;Искусства программирования&quot; можно легко про-продолжить.</p>
      <p>Автор этих строк прослушал курс &quot;Искусство программирования&quot; в изложении про-профессора Кнута в 1976-1977 годах во время стажировки в Станфордском университете. Тогда формировалась алгоритмическая основа технологий программирования, у истоков которой стоял Д. Э. Кнут. Было много обсуждений, семинаров, творческих замыслов.</p>
      <empty-line/>
      <p>Значительные книги всегда связаны с судьбой автора. Дональд Эрвин Кнут начал работу над &quot;Искусством программирования&quot; в 1962 году. Продолжает ее и сейчас. У него много планов. Впереди новые тома &quot;Искусства программирования&quot; которых с нетерпением ждут читатели. 
<!--EndFragment--></p>
      <empty-line/>
      <section>
        <p>— Профессор Анатолий Анисимов</p>
      </section>
    </section>
    <section>
      <title>
        <p>От редактора перевода</p>
      </title>
      <p>Со времени первого издания книги &quot;Искусство программирования&quot; Д. Э. Кнута прошло около 25 лет. Тем не менее книга не только не устарела, но по-прежнему остается основным руководством по искусству программирования, книгой, по которой учатся понимать суть и особенности этого искусства.</p>
      <p>За эти годы на английском языке вышло уже третье издание 1-го и 2-го томов, а также второе издание 3-го тома. Автор внес в них значительные изменения и существенные дополнения. Достаточно сказать, что число упражнений практически удвоилось, а многие упражнения, включенные в предыдущие издания (особенно ответы к ним), модифицированы. Существенно дополнены и переделаны многие главы и разделы, исправлены неточности и опечатки, добавлены многочисленные новые ссылки на литературу, использованы теоретические результаты последних лет.</p>
      <p>Значительно преобразилась глава 3, особенно разделы 3.5 и 3.6, а также разделы 4.5.2, 4.7, 5.1.4, 5.3, 5.4.9, 6.2.2, 6.4, 6.5 и др.</p>
      <p>Естественно, возникла необходимость в новом издании книги.</p>
      <p>Перевод выполнен по третьему изданию 1-го и 2-го томов и второму изданию 3-го тома. Кроме того, учтены дополнения и исправления, любезно предоставленные автором.</p>
      <p>При переводе мы старались сохранить стиль автора, обозначения и манеру изложения материала. В большинстве случаев использовались термины, принятые в научной литературе на русском языке. При необходимости приводились английские эквиваленты. По многим причинам, в частности из-за сложности некоторых разделов, читать книгу &quot;Искусство программирования&quot; далеко непросто. Одной из причин, которые затрудняют понимание книги, является манера изложения автора; привыкнув к ней,можно существенно облегчить чтение.</p>
      <p>Из-за обилия материала (часто мало связанного между собой) невозможно построить книгу так, чтобы различные понятия и определения вводились сразу же при первом упоминании о них. Поэтому в главе 1 могут обсуждаться без ссылок понятия, строгие определения которых приводятся в 3-м томе. Именно поэтому так велика роль предметного указателя, без которого понимание книги было бы существенно затруднено. Надеемся, что читатель не будет удивлен, найдя ссылки на главы 7, 8 и последующие не вошедшие в предлагаемые три тома главы. Мы вместе с автором надеемся, что очень скоро они будут опубликованы и, безусловно, сразу же появятся в русском переводе в качестве продолжения этого издания.</p>
      <p>Следует также обратить внимание на далеко не всегда стандартные обозначения, которыми пользуется автор. Так же, как и определения, эти обозначения могут появиться в 1-м томе, а вводиться во 2-м. Поэтому без указателя обозначений пользоваться книгой было бы чрезвычайно трудно. Хочу также обратить внимание на запись [А], где А — некоторое высказывание. Эта запись встречается в формулах, а иногда и в тексте, и обозначает величину, равную индикатору А.</p>
      <section>
        <p>— Профессор Ю. В. Козаченко</p>
      </section>
    </section>
    <section>
      <title>
        <p>Предисловие</p>
      </title>
      <epigraph>
        <p>Уважаемые читатели! Вы держите в руках книгу, издать которую Вы просили нас в тысячах писем. Нам пришлось потратить годы на то,чтобы самым тщательным образом проверить и перепроверить бесконечное множество рецептов и отобрать для вас самые лучшие, самые интересные, самые совершенные. Теперь без тени сомнения мы можем сказать, что если вы будете следовать инструкциям,то каждое блюдо будет получаться у вас таким же, как и у нас, даже если раньше вы никогда не занимались приготовлением пищи.</p>
        <text-author>— Поваренная книга Мак-Колла (1963)</text-author>
      </epigraph>
      <p>Процесс подготовки программ для цифрового компьютера — это очень увлекательное занятие. И дело не только в том, что оно оправдывает себя с экономической и научной точек зрения; оно может вызвать также эстетические переживания, подобные тем, которые испытывают творческие личности при написании музыки или стихов. Вы держите в руках первый том многотомного издания, цель которого — дать читателю разнообразные знания и умения, из которых и состоит ремесло программиста.</p>
      <p>Последующие главы не являются введением в компьютерное программирование; предполагается, что вы уже имеете некоторый опыт в этой области. На самом деле предъявляемые к читателю требования очень просты; тем не менее начинающему программисту потребуются время и практика, чтобы понять, что собой представляет цифровой компьютер. Итак, читатель должен иметь:</p>
      <p>a) некоторое представление о том, как работает цифровой компьютер с хранимой программой; при этом необязательно разбираться в электронике, главное —понимать, каким образом команды можно сохранять в памяти компьютера,и затем последовательно их выполнять;</p>
      <p>b) способность ставить задачу с помощью четких и определенных терминов, понятных компьютеру( у компьютеров нет разума, присущего человеку, поэтому они делают в точности то, что им приказывают, не больше и не меньше; именно этот факт обычно труднее всего уяснить начинающим пользователям);</p>
      <p>c) знание самых простых компьютерных методов, таких как организация циклов( повторное выполнение некоторого набора команд), а также использование подпрограмм и переменных с индексами;</p>
      <p>d) знание распространенных компьютерных терминов, например &quot;память&quot;, &quot;регистры&quot;, &quot;биты&quot;, &quot;плавающая точка&quot;, &quot;переполнение&quot;, &quot;программное обеспечение&quot;; большинство терминов, которые не определены в тексте, поясняются в алфавитном указателе в конце каждого тома.</p>
      <p>Эти четыре условия, вероятно, можно объединить в одном требовании: читатель должен иметь опыт написания и отладки по меньшей мере четырех программ хотя бы для одного компьютера.</p>
      <p>Я старался писать эти книги так, чтобы они могли служить нескольким различным целям. Во-первых, они представляют собой справочное пособие, в котором сосредоточены знания из нескольких важных областей науки. Во-вторых, они могут использоваться в качестве пособий для самообразования и учебников по программированию или информатике для университетов. В связи с этим я включил в текст большое количество упражнений и предоставил ответы на большинство из них. Кроме того, я попытался сосредоточить внимание на фактах, вместо того чтобы &quot;лить воду&quot; и заниматься общими рассуждениями.</p>
      <p>Этот трехтомник предназначен для всех, кто серьезно интересуется компьютерами, а не только для профессионалов. В сущности, одна из моих главных целей состояла в том, чтобы сделать методы программирования более доступными для специалистов из других областей. Как правило, эти специалисты получают большие преимущества, используя компьютеры, но не могут позволить себе тратить время на поиски необходимой информации, крупицы которой разбросаны по множеству технических журналов.</p>
      <p>Тему этих книг можно сформулировать следующим образом: &quot;Нечисленный анализ&quot;. Компьютеры обычно ассоциируются с решением численных задач, таких как нахождение корней уравнения, численное интерполирование, интегрирование и т. д. Но в этом трехтомнике подобные темы не рассматриваются( за исключением случаев, когда это необходимо сделать по ходу изложения). Численное компьютерное программирование — необычайно интересная и бурно развивающаяся область; на эту тему написано очень много хороших книг. Но с 60-х годов компьютеры все чаще и чаще применяются для решения проблем, в которых числа играют второстепенную роль. Теперь на первый план выходит способность компьютера принимать решения, а не просто выполнять арифметические операции. При решении нечисленных задач иногда требуется выполнять операции сложения и вычитания, но потребность в умножении и делении возникает довольно редко. Но, конечно, даже тот, кто в основном занимается численным компьютерным программированием, только выиграет-от изучения нечисленных методов, так как они лежат и в основе числовых программ.</p>
      <p>Результаты исследований в области нечисленного анализа разбросаны по многим техническим журналам. Моя цель состояла в том, чтобы извлечь из этого огромного объема информации только фундаментальные методы, которые можно применять в разнотипных ситуациях программирования. Я попытался обобщить выбранную информацию, чтобы получить то, что в большей или меньшей степени можно назвать &quot;теорией&quot;, а также показать, как применять эту теорию при решении различных практических задач.</p>
      <p>Конечно, &quot;нечисленный анализ&quot; — крайне неудачное название для данной области науки. Оно неудачно прежде всего потому, что содержит только отрицание, другого понятия; гораздо лучше было бы выбрать более содержательный термин, не имеющий приставки &quot;не&quot;. Название &quot;обработка информации&quot; охватывает более широкую область, чем рассматриваемый здесь материал, а &quot;методы программирования&quot; — более узкую. Я считаю, что для темы, освещаемой в данных книгах, самым подходящим является название анализ алгоритмов, которое можно расшифровать как &quot;теория свойств некоторых компьютерных алгоритмов&quot;.</p>
      <p>Полный набор книг, озаглавленный как Искусство программирования, имеет следующую основную структуру.</p>
      <p>Том 1. Основные алгоритмы</p>
      <p> Глава 1. Основные понятия</p>
      <p> Глава 2. Информационные структуры</p>
      <p>Том 2. Получисленные алгоритмы</p>
      <p> Глава 3. Случайные числа</p>
      <p> Глава 4. Арифметика</p>
      <p>Том 3. Сортировка и поиск</p>
      <p> Глава 5. Сортировка</p>
      <p> Глава 6. Поиск</p>
      <p>Том 4. Комбинаторные алгоритмы</p>
      <p> Глава 7. Комбинаторный поиск</p>
      <p> Глава 8. Рекурсия</p>
      <p>Том 5. Синтаксические алгоритмы</p>
      <p> Глава 9. Лексикографический поиск</p>
      <p> Глава 10. Синтаксический анализ</p>
      <p>В томе 4 рассматривается очень большая тема, поэтому на самом деле он состоит из трех отдельных книг (томов 4А, 4В и 4С). Планируется также выпуск двух дополнительных томов по более специализированным темам: том 6, Теория языков(глава 11), и том 7, Компиляторы (глава 12). </p>
      <p>Я приступил к этой работе в 1962 году с намерением написать единственную книгу, содержащую все перечисленные главы, но вскоре понял, что необходимо глубоко рассматривать выбранные темы, а не просто &quot;скользить по поверхности&quot;. В результате получился текст такого объема, что материала каждой главы оказалось более чем достаточно для изучения в течение одного университетского семестра.И стало ясно, что необходимо разбить материал на несколько отдельных томов. Я знаю, что книга, содержащая только одну-две главы, выглядит довольно странно,но решил сохранить первоначальную нумерацию глав, чтобы упростить перекрестные ссылки. Планируется выпуск сокращенного варианта томов 1-5, который будет служить более общим справочником и/или учебником для студентов; в нем будет содержаться основная часть материала данных томов, а более специальная информация будет опущена. В сокращенном издании будет сохранена такая же нумерация глав, как и в полном.</p>
      <p>Том 1 можно рассматривать как &quot;пересечение&quot; полного набора глав, в том смысле, что он содержит основные сведения, которые используются во всех остальных книгах. С другой стороны, тома 2-5 можно читать независимо один от другого. Том 1 — это не только справочник, который необходимо использовать как пособие при чтении других томов; он может служить также университетским учебником либо пособием для самообразования по теме структуры данных( основное внимание следует уделить главе 2) или дискретная математика (основное внимание следует уделить разделам 1.1, 1.2, 1.3.3 и 2.3.4), или программирование на языке машинных команд( основное внимание следует уделить разделам 1.3 и 1.4).</p>
      <p>Эти главы написаны с другой точки зрения, чем та, которая используется в самых современных книгах по программированию, т. е. я не пытался научить читателя пользоваться чужим программным обеспечением. Вместо этого я стремился научить читателя писать собственные программы более высокого качества.</p>
      <p>Моя первоначальная цель заключалась в том, чтобы познакомить читателей с передовыми научными исследованиями в каждой из рассматриваемых областей знания. Но очень сложно постоянно быть в курсе дел отрасли, которая является экономически выгодной; бурный рост компьютерной науки сделал невозможным осуществление моей мечты. Образно говоря, я очутился на берегу безбрежного океана, содержащего десятки тысяч маленьких результатов, которые были получены десятками тысяч талантливых людей по всему миру. Поэтому мне пришлось поставить перед собой новую цель — сосредоточиться на &quot;классических&quot; методах, которые останутся актуальными в течение многих десятилетий, и описать их как можно лучше по мере моих возможностей. В частности, я попытался проследить историю каждой темы и заложить прочный фундамент ее дальнейшего развития. Я старался использовать точную терминологию, согласованную с той, которая применяется в современных публикациях, и попытался сообщить обо всех известных идеях последовательного программирования, выделяющихся простотой и изяществом формулировок.<style class="Apple-tab-span"/></p>
      <p>Теперь несколько слов о математическом содержании данного многотомного издания. Материал излагается так, что он вполне доступен даже лицам со средним образованием; более сложные фрагменты они смогут просмотреть или просто опустить. В то же время те, кто имеют склонность к математике, смогут изучить интересные математические методы, связанные с дискретной математикой. Подобная двойственность представления информации была достигнута, с одной стороны,за счет присвоения рейтинга каждому упражнению (чтобы читатель смог отличать сложные с математической точки зрения упражнения от простых), а с другой стороны, благодаря такой организации разделов, при которой главные математические результаты сформулированы перед доказательствами. Доказательства предлагается либо провести самостоятельно в качестве упражнений( ответы на которые приводятся в отдельном разделе), либо найти в конце раздела.</p>
      <p>Читатель, который, главным образом, интересуется программированием, а не математикой, может прекратить чтение раздела, как только математический материал станет слишком сложным для восприятия. С другой стороны, читатель-математик найдет для себя очень много интереснейших фактов. Многие математические публикации на тему программирования были ошибочными, поэтому одна из целей данной книги — предоставить читателю правильное математическое обоснование предмета изложения. И так как я считаю себя математиком, моя прямая обязанность — правильно( насколько смогу) изложить материал с математической точки зрения.</p>
      <p>Для чтения большей части математического материала вполне достаточно знания элементарной математики, так как почти вся остальная теория разрабатывается здесь же. Но иногда у меня возникает необходимость в более глубоких теоремах теории комплексного переменного, теории вероятностей, теории чисел и т. д. В подобных случаях я ссылаюсь на книги, содержащие подробное изложение данных тем.</p>
      <p>Самое сложное решение, которое мне пришлось принять при подготовке этих книг, касалось способа представления различных методов: Преимущества блок-схем и пошаговых описаний алгоритмов хорошо известны; эти вопросы обсуждаются в статье &quot;Computer-Drawn Flowcharts&quot; в журнале ACM Communications, Vol. 6(September 1963), pages 555-563. Для описания любого компьютерного алгоритма необходим также формальный и точный язык. Поэтому мне нужно было решить, какой язык использовать: алгебраический, такой как ALGOL или FORTRAN, либо машинно-ориентированный. Вероятно, многие сегодняшние компьютерные специалисты не согласятся с моим решением использовать машинно-ориентированный язык, но я убедился, что это был правильный выбор. На то существуют следующие причины:</p>
      <p>a) На программиста большое влияние оказывает язык, на котором написаны программы. В настоящее время превалирует тенденция к выбору самых простых, а не самых оптимальных для компьютера конструкций языка. А программист, который знает машинно-ориентированный язык, стремится использовать более эффективные методы и таким образом создает более совершенные программы.</p>
      <p>b) Все нужные нам программы, написанные на машинно-ориентированном языке, за редким исключением будут иметь небольшой размер. А это значит, что при наличии компьютера, обладающего минимальной вычислительной мощностью, проблем с использованием таких программ у нас не возникнет.</p>
      <p>c) Языки высокого уровня не подходят для обсуждения важных деталей, имеющих отношение к низкому уровню, таких как связь сопрограмм, генерирование случайных чисел, арифметика высокой точности и многие другие проблемы, связанные с эффективным использованием памяти.</p>
      <p>d) Тот, кто серьезно интересуется компьютерами, должен хорошо знать машинный язык, так как он лежит в основе работы компьютера.</p>
      <p>e) Некоторое знание машинного языка необходимо в любом случае, чтобы разобраться в выходных данных программ, приведенных во многих примерах.</p>
      <p>f) Новые алгебраические языки входят и выходят из моды приблизительно каждые пять лет, в то время как я пытаюсь говорить о &quot;вечных истинах&quot;.</p>
      <p>С другой стороны, я признаю, что писать программы на языках высокого уровня и отлаживать эти программы значительно проще. В сущности, начиная с 1970 года, я сам редко использовал машинный язык низкого уровня для собственных программ, так как современные компьютеры обладают большим объемом памяти и высоким быстродействием. Но для решения многих проблем, рассматриваемых в данной книге, наибольшее значение имеет искусство программирования. Например, некоторые комбинаторные вычисления нужно повторять триллионы раз, и мы сэкономим приблизительно 11,6 дней работы за счет того, что сократим время вычислений во внутреннем цикле всего на одну микросекунду. Аналогично имеет смысл приложить дополнительные усилия для написания программы, которая будет использоваться много раз в течение каждого дня на множестве компьютеров, тем более что написать эту программу нужно только один раз.</p>
      <p>А если принять решение использовать машинно-ориентированный язык, то какому языку следует отдать предпочтение? Я мог бы выбрать язык для конкретной машины X, но тогда те, кто используют другой компьютер, подумают, что данная книга написана только в расчете на обладателей компьютера X. Более того, машина X, вероятно, имеет много характерных особенностей, для которых совершенно неприменим материал данной книги, но все же его необходимо изложить. И наконец, через два года фирма-производитель машины X выпустит машину X + 1 или 10Х, и компьютер X больше никого не будет интересовать.</p>
      <p>Чтобы решить эту проблему, я попытался разработать &quot;идеальный&quot; компьютер с очень простыми правилами работы( изучить которые можно, скажем, всего за час) и очень похожий на реальные машины. Для студента нет никакой причины избегать изучения характеристик различных компьютеров; после изучения одного языка все остальные будут усваиваться гораздо легче. Кроме того, серьезный программист должен быть готов к тому, что в ходе работы ему придется сталкиваться с различными машинными языками. Поэтому остается только один недостаток использования вымышленной машины — сложность запуска написанных для нее программ. К счастью, на самом деле это не проблема, так как много добровольцев предложили свои услуги по написанию имитаторов гипотетической машины. Такие имитаторы идеальны для учебных целей, и работать с ними даже проще, чем с реальным компьютером.</p>
      <p>Я старался ссылаться на самые лучшие старые статьи по каждой теме, а также упоминать новые работы. Ссылаясь на литературные источники, я использовал стандартные сокращения для названий периодических изданий, за исключением наиболее часто цитируемых журналов, для которых применялись следующие со-сокращения.</p>
      <p>CACM — Communications of the Association for Computing Machinery</p>
      <p>JACM — Journal of the Association for Computing Machinery</p>
      <p>Comp. J. — The Computer Journal (British Computer Society)</p>
      <p>Math. Comp. — Mathematics of Computation</p>
      <p>AMM — American Mathematical Monthly</p>
      <p>SICOMP — SIAM Journal on Computing</p>
      <p>FOCS — IEEE Symposium on Foundations of Computer Science</p>
      <p>SODA — ACM-SIAM Symposium on Discrete Algorithms</p>
      <p>STOC — ACM Symposium on Theory of Computing</p>
      <p>Crelle — Journal fur die reine und angewandte Mathematik</p>
      <p>Например, &quot;САСМ 6 A963), 555-563&quot; означает ссылку на журнал, упомянутый водном из предыдущих абзацев этого предисловия. Сокращение &quot;CMatb&quot; я использо-использовал также для обозначения книги Конкретная математика, на которую есть ссылка во введении к разделу 1.2.</p>
      <p>Большая часть технического материала этих книг приходится на упражнения. Если идея нетривиального упражнения принадлежала не мне, то я старался упомянуть ее автора. Ссылки на литературу обычно даются в тексте раздела либо в ответе к упражнению. Но во многих случаях в основе упражнений лежат неопубликованные материалы, на которые нельзя дать ссылки.</p>
      <p>В течение долгих лет работы над этими книгами мне помогали многие люди, которым я благодарен от всей души. Прежде всего, я хочу выразить благодарность моей жене Джилл, за ее бесконечное терпение, за подготовку некоторых иллюстраций и за постоянную помощь во всем. Я признателен также Роберту В. Флойду (Floyd Robert W.) за то, что в 60-х годах он посвятил столько времени работе над улучшением и углублением данного материала. Тысячи других людей также оказали мне неоценимую помощь. Чтобы просто перечислить их имена, понадобилась бы еще одна такая книга! Многие из них любезно разрешили мне использовать их старые неопубликованные работы. Мои исследования в Калифорнийском технологическом институте и Станфордском университете щедро финансировались Национальным научным фондом (National Science Foundation) и департаментом морских исследований (Office of Naval Research). Издательство Addison-Wesley всегда оказывало мне всемерную помощь и поддержку с того самого времени, когда в 1962 году я приступил к работе над проектом. Мне кажется, что для всех этих людей лучшая благодарность — данная публикация. Она показывает, что их вклад привел к появлению книг, в которых, я надеюсь, мне удалось написать то, чего они ожидали.</p>
      <empty-line/>
    </section>
    <section>
      <title>
        <p>Предисловие к третьему изданию</p>
      </title>
      <p>Потратив десять лет на разработку систем компьютерного набора METAFONT и TEX, я теперь могу осуществить свою мечту — применить эти системы для набора книги Искусство программирования. Наконец-то мне удалось внести полный текст этой книги в персональный компьютер и таким образом получить ее электронную версию, что позволит в дальнейшем вносить любые изменения в технологию печати и отображения на экране. Такой способ работы дал мне возможность сделать буквально тысячи улучшений; я добился того, о чем так долго мечтал.</p>
      <p>В этом новом издании я смог проверить каждое слово в тексте, стараясь сохранить юношеский задор моих первоначальных исследований и в то же время внести большую зрелость суждений. Были добавлены десятки новых упражнений, а на десятки старых даны новые или улучшенные ответы.</p>
      <p><image l:href="#В процессе построения(1).png"/>Таким образом, работа над книгой Искусство программирования продолжается. Именно поэтому некоторые части данной книги начинаются пиктограммой &quot;В процессе построения&quot; (это своеобразное извинение за то, что приведены не самые новые данные). Мои папки переполнены важными материалами, которые я планирую включить в окончательное, славное четвертое издание тома 1; оно выйдет,вероятно, через 15 лет. Но сначала я должен закончить тома 4 и 5. Я хочу, что бы они были опубликованы сразу же, как только будут готовы к печати.</p>
      <p>Большая часть тяжелой работы по подготовке этого нового издания была выполнена Филлис Винклер (Phyllis Winkler) и Сильвио Леви (Silvio Levy), которые профессионально набирали и редактировали текст второго издания, а также Джеффри Олдхэмом (Jeffrey Oldham), который конвертировал почти все оригинальные иллюстрации в формат METAPOST. Я исправил все ошибки, которые бдительные читатели( Бэрри) обнаружили во втором издании( а также ошибки, которые, увы, не заметил никто ), и постарался избежать появления новых ошибок в новом материале. Тем не менее я допускаю, что некоторые огрехи все же остались, и хотел быи справить их как можно скорее. Поэтому за каждую опечатку*, а также ошибку, относящуюся к сути излагаемого материала или к приведенным историческим сведениям, я охотно заплачу $2,56 тому, кто первым ее найдет. На Web-странице, адрес которой приведен на обороте титульной страницы, содержится текущий список всех ошибок, о которых мне сообщили**.</p>
      <section>
        <p>Станфорд, Калифорния</p>
        <p>Апрель 1997</p>
      </section>
      <section>
        <p>За последние двадцать лет мир изменился.</p>
        <p>— Билл Гейтс (Bill Gates) (1995)</p>
      </section>
    </section>
    <section>
      <title>
        <empty-line/>
      </title>
      <empty-line/>
    </section>
  </body>
  <binary id="В процессе построения(1).png" content-type="image/png">
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
TkSuQmCC
  </binary>
</FictionBook>
